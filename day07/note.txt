多进程：
	孤儿进程:父进程结束后，子进程就成为孤儿进程。init进程会收养所有的孤儿进程，
	这样确保每个进程都有父进程。在UNIX/Linux系统中要求除init之外的每个进程都必
	须有父进程。init充当孤儿院，因为它总是在运行，直到关机。
	僵尸进程:子进程结束了，但父进程还没有处理它的结束状态信息，这时的进程称为
	僵尸进程。状态为Z。
	wait/waitpid:用来取得（处理）子进程的结束状态信息，经过处理的僵尸进程才会
	从系统消亡。<sys/wait.h>
	int state;
	pid_t wait(&state),取得一个结束的子进程的结束状态，返回那个子进程的id。
	失败返回-1。state中保存子进程的结束状态，不仅仅是子进程的返回值。如果不关
	心结束状态数据，wait的参数可以是NULL。WIFEXITED(state)判断是否是正常退出，
	如果是，可以用WEXITSTATUS(state)取得子进程的main或者exit带的返回值（0～255
	，超过会截断）.如果不是正常退出，可以用WIFSIGNALED(state)判断是否是被信号
	终止并用WTERMSIG(state)取得终止这个进程的信号。如果没有子进程结束，它会一
	直等待直到有子进程结束，如果根本没有子进程则失败。
	int state;
	pid_t waitpid(id,&state,flag);等待指定的子进程id结束，取得它的结束状态。
	成功返回子进程id。如果子进程没有结束，flag为0就等待，flag为WNOHANG就不等
	待直接返回0。如果根本没有子进程则失败返回-1。id如果用-1表示不指定哪个子进
	程（常用）。如果不关心结束状态数据，waitpid的第二个参数可以是NULL。waitpid
	(-1,&state,0)等价于wait(&state).
信号：
	信号是一种软中断。
	基本信号处理
	守护进程（精灵进程）
	。。。

