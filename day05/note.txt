小练习：
写一个程序，用来管理学生信息。学生信息包括学号、姓名、性别、出生年月、
联系方式、住址、成绩。程序用一个结构来保存每一个学生的信息，用一个文
件来保存所有学生的信息。程序提供添加学生和查询学生信息（根据学号）功
能。要求用菜单，学号自动产生，程序退出后再运行可继续工作。
要求：文件操作用操作系统这一套open/read/write/lseek

多进程MultiProcess
认识自己
    取得当前用户id:getuid()
    取得有效用户id：geteuid()
    chmod u+s 可执行文件名,
      不管谁执行这个程序的时候，有效用户id都是程序的所有者。
    取得进程id：getpid()唯一，同一个程序运行多份也各自有各自的id。
    init进程是linux中的第一个进程，id总是1。
    取得父进程id：getppid()
    进程状态：ps -l (R/O正在运行，S/D睡眠状态,T挂起状态,Z僵尸状态)
    Ctrl+Z挂起当前进程,jobs查看后台进程，
    bg %1把1号后台进程运行起来
    fg %1把1号后台进程切换到前台来运行
    命令后面加&表示在后台运行这个命令进程
自己产生多进程：
    system("命令")执行一条shell命令。这个命令可以是shell支持的任何
    形式（比如选项、参数、管道、重定向）。等命令执行完毕，函数才返回。
    返回一个整数。出错返回-1或者127。一般不关心它的返回值，因为它不能
    严格地说明任何问题。那个新执行的命令也会是一个进程，就是当前进程
    的子进程。
    fork()把当前进程完全克隆一份。
    fork炸弹  :(){ : | : & };:
    。。。
